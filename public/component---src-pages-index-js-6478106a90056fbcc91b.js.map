{"version":3,"sources":["webpack:///./src/components/dribbble.js","webpack:///./src/components/project-card.js","webpack:///./src/components/project-list.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Dribbble","data","isVertical","useWindowSize","query","render","dribbbles","allIndexYaml","edges","ratio","map","d","node","source","childImageSharp","fixed","aspectRatio","verticalHeight","horizontalWidth","style","margin","flexShrink","Cards","gridTemplateColumns","gridTemplateRows","dribbble","ImgHolder","href","link","title","position","top","left","width","height","decorated","level","styled","a","div","Device","laptop","ProjectCard","path","cover","ref","pageRef","useRef","cursorRef","pointRef","useState","Holder","to","bg","Wrapper","CardShadow","Card","onMouseDown","e","preventDefault","TweenMax","current","scale","ease","Power0","easeOut","onMouseUp","onMouseEnter","display","onMouseLeave","onMouseMove","clientX","clientY","x","getBoundingClientRect","y","CardImg","Cursor","Point","Img","AniLink","ProjectList","allMdx","p","project","frontmatter","fields","slug","Intro","IndexPage","lined","items","createHTML","url","this"],"mappings":"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","file":"component---src-pages-index-js-6478106a90056fbcc91b.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\nimport { Device, useWindowSize } from \"../global/sizes\"\nimport { Heading } from \"./heading\"\n\nexport function Dribbble({ data }) {\n    const { isVertical } = useWindowSize()\n    return (\n        <StaticQuery\n            query={graphql`\n                query Dribbble {\n                    allIndexYaml {\n                        edges {\n                            node {\n                                link\n                                title\n                                source {\n                                    childImageSharp {\n                                        fixed(width: 800, height: 600) {\n                                            ...GatsbyImageSharpFixed\n                                            aspectRatio\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => {\n                const { edges: dribbbles } = data.allIndexYaml\n                const ratio = dribbbles.map(\n                    d => d.node.source.childImageSharp.fixed.aspectRatio\n                )[0]\n\n                const verticalHeight = `${43 * (1 / ratio)}vw`\n                const horizontalWidth = `${230 * ratio}px`\n\n                return (\n                    <div style={{ margin: \"0 20px\", flexShrink: \"0\" }}>\n                        <Cards\n                            style={{\n                                ...(isVertical\n                                    ? {\n                                          gridTemplateColumns: `43vw 43vw`,\n                                          gridTemplateRows: `${verticalHeight} ${verticalHeight} ${verticalHeight}`,\n                                      }\n                                    : {\n                                          gridTemplateColumns: `${horizontalWidth} ${horizontalWidth} ${horizontalWidth}`,\n                                          gridTemplateRows: `230px 230px`,\n                                      }),\n                            }}\n                        >\n                            {dribbbles.map(d => {\n                                const dribbble = d.node\n                                if (dribbble)\n                                    return (\n                                        <ImgHolder href={dribbble.link}>\n                                            <Img\n                                                fixed={\n                                                    dribbble.source\n                                                        .childImageSharp.fixed\n                                                }\n                                                title={dribbble.title}\n                                                style={{\n                                                    ...{\n                                                        position: \"absolute\",\n                                                        top: \"0\",\n                                                        left: \"0\",\n                                                    },\n                                                    ...(isVertical\n                                                        ? {\n                                                              width: \"44vw\",\n                                                              height: verticalHeight,\n                                                          }\n                                                        : {\n                                                              width: horizontalWidth,\n                                                              height: \"230px\",\n                                                          }),\n                                                }}\n                                            />\n                                        </ImgHolder>\n                                    )\n                            })}\n                        </Cards>\n                        <Heading decorated level=\"2\">\n                            View more on Dribbble\n                        </Heading>\n                    </div>\n                )\n            }}\n        />\n    )\n}\n\nconst ImgHolder = styled.a`\n    display: block;\n    position: relative;\n    transition: 0.2s ease all;\n    cursor: pointer;\n    border-radius: 5px;\n    overflow: hidden;\n\n    &:hover {\n        opacity: 0.4;\n    }\n`\nconst Cards = styled.div`\n    display: grid;\n    grid-gap: 4vw;\n    width: 90vw;\n    height: auto;\n    margin-bottom: 30px;\n    padding-top: 80px;\n    margin-top: 30px;\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n\n    @media ${Device.laptop} {\n        border-top: none;\n        padding-top: 0;\n        margin-top: 0;\n        grid-gap: 20px;\n        width: auto;\n        height: 480px;\n    }\n`\n","import React, { useRef, useState } from \"react\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { Heading } from \"./heading\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport { Sizes, useWindowSize, Device } from \"../global/sizes\"\nimport { TweenMax, Power0 } from \"gsap\"\n\nexport function ProjectCard({ title, path, cover, pageRef }) {\n    const ref = useRef()\n    const cursorRef = useRef()\n    const pointRef = useRef()\n    const { isVertical } = useWindowSize()\n    const [pos, setPos] = useState([0, 0])\n\n    return (\n        <Holder to={path} cover bg=\"#FFF\">\n            <Wrapper>\n                <CardShadow />\n                <Card\n                    ref={ref}\n                    onMouseDown={e => {\n                        e.preventDefault()\n                        TweenMax.to(pointRef.current, 0.12, {\n                            scale: 1,\n                            ease: Power0.easeOut,\n                        })\n                    }}\n                    onMouseUp={e => {\n                        e.preventDefault()\n                    }}\n                    onMouseEnter={() => {\n                        TweenMax.to(cursorRef.current, 0, { display: \"flex\" })\n                    }}\n                    onMouseLeave={() => {\n                        TweenMax.to(cursorRef.current, 0, { display: \"none\" })\n                    }}\n                    onMouseMove={({ clientX, clientY }) => {\n                        const x =\n                            clientX - ref.current.getBoundingClientRect().x - 25\n                        const y =\n                            clientY - ref.current.getBoundingClientRect().y - 25\n\n                        TweenMax.to(cursorRef.current, 0, {\n                            y: y,\n                            x: x,\n                        })\n                    }}\n                >\n                    <CardImg\n                        fixed={cover}\n                        style={\n                            isVertical\n                                ? {\n                                      width: \"90vw\",\n                                      height: `${90 *\n                                          (1 / cover.aspectRatio)}vw`,\n                                  }\n                                : {}\n                        }\n                    />\n                    <Cursor ref={cursorRef}>\n                        <Point ref={pointRef} />\n                    </Cursor>\n                </Card>\n            </Wrapper>\n            <Heading decorated level=\"2\">\n                {title}\n            </Heading>\n        </Holder>\n    )\n}\n\nconst Point = styled.div`\n    height: 100%;\n    width: 100%;\n    border-radius: 9999px;\n    background-color: #fff;\n    display: block;\n    transform: scale(0.1);\n`\n\nconst Cursor = styled.div`\n    border-radius: 9999px;\n    border: 1px solid #fff;\n    z-index: 100;\n    position: absolute;\n    display: none;\n    width: 50px;\n    top: 0;\n    left: 0;\n    height: 50px;\n    align-items: center;\n    justify-content: center;\n    background-color: #dbbfaf;\n`\n\nconst CardShadow = styled.div`\n    position: absolute;\n    z-index: 0;\n    width: 80vw;\n    height: auto;\n    top: 0;\n    left: 5%;\n    transition: 0.2s ease all;\n    background-color: transparent;\n    @media ${Device.laptop} {\n        width: 90%;\n        height: 100%;\n    }\n`\n\nconst Wrapper = styled.div`\n    position: relative;\n`\n\nconst Card = styled.div`\n    margin-bottom: 30px;\n    position: relative;\n    border-radius: 5px;\n    overflow: hidden;\n    width: 90vw;\n    height: auto;\n    position: relative;\n    z-index: 2;\n    padding: 0;\n    min-height: 0;\n    max-height: 1;\n    line-height: 0;\n    box-sizing: border-box;\n    cursor: none;\n\n    @media ${Device.laptop} {\n        width: 780px;\n        height: 480px;\n    }\n`\n\nconst CardImg = styled(Img)`\n    transition: 2s ease transform;\n`\n\nconst Holder = styled(AniLink)`\n    flex-shrink: 0;\n    margin: 20px;\n    transform: scale(1);\n\n    &:hover {\n        ${CardShadow} {\n            box-shadow: 0px 40px 90px rgba(0, 0, 0, 0.4);\n        }\n\n        ${CardImg} {\n            transform: scale(1.2);\n        }\n    }\n`\n","import React from \"react\"\nimport { ProjectCard } from \"./project-card\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nexport function ProjectList({ data, pageRef }) {\n    return (\n        <StaticQuery\n            query={graphql`\n                query ListProjects {\n                    allMdx(\n                        sort: { fields: [frontmatter___order], order: ASC }\n                    ) {\n                        edges {\n                            node {\n                                id\n                                frontmatter {\n                                    title\n                                    cover {\n                                        childImageSharp {\n                                            fixed(width: 780, height: 480) {\n                                                ...GatsbyImageSharpFixed\n                                                aspectRatio\n                                            }\n                                        }\n                                    }\n                                }\n                                fields {\n                                    slug\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => {\n                const { edges: projects } = data.allMdx\n                return projects.map(p => {\n                    const project = p.node\n                    if (project)\n                        return (\n                            <ProjectCard\n                                title={project.frontmatter.title}\n                                path={project.fields.slug}\n                                pageRef={pageRef}\n                                cover={\n                                    project.frontmatter.cover.childImageSharp\n                                        .fixed\n                                }\n                            />\n                        )\n                })\n            }}\n        />\n    )\n}\n","import React, { useRef } from \"react\"\nimport styled from \"styled-components\"\n\nimport { Heading } from \"../components/heading\"\nimport { Paragraph } from \"../components/paragraph\"\nimport { Dribbble } from \"../components/dribbble\"\nimport { ProjectList } from \"../components/project-list\"\nimport { Page } from \"../components/page\"\nimport { Decorations } from \"../components/decorations\"\nimport { Sizes, useWindowSize, Device } from \"../global/sizes\"\nimport { Scroll } from \"../components/scroll\"\n\nconst IndexPage = () => {\n    const pageRef = useRef()\n\n    return (\n        <Page ref={pageRef}>\n            <Scroll pageRef={pageRef} />\n            <Intro>\n                <Heading lined>Independent Designer</Heading>\n                <p>Designing immersive, special crafted digital experiences.</p>\n                <p>\n                    Purposefully creating products that align with your\n                    business' needs and values.\n                </p>\n            </Intro>\n            <ProjectList pageRef={pageRef} />\n            <Dribbble />\n            <div style={{ width: `200px`, height: `40px`, flexShrink: 0 }} />\n            <Decorations\n                items={[\n                    \"UI/UX Design\",\n                    \"Iteration Design\",\n                    \"Identity Design\",\n                    \"Product Design\",\n                ]}\n            />\n        </Page>\n    )\n}\n\nconst Intro = styled.div`\n    width: 80%;\n    height: auto;\n    flex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    margin-right: 0px;\n    margin-top: 150px;\n    margin-left: 20px;\n    margin-bottom: 30px;\n\n    @media ${Device.laptop} {\n        margin-right: 200px;\n        margin-left: 0;\n        width: 350px;\n        height: 100%;\n        margin-bottom: 0;\n        margin-top: -70px;\n    }\n`\n\nexport default IndexPage\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}